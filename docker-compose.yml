# docker-compose.yml
version: '3.8'

services:
  app:
    container_name: nodejs_api
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=api_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - JWT_SECRET=your_jwt_secret
      - JWT_EXPIRES_IN=24h
    volumes:
      - ./:/usr/src/app  # Monta el directorio actual en /usr/src/app dentro del contenedor
      - /usr/src/app/node_modules  # Evita que node_modules local sobrescriba el del contenedor
    command: npm run dev  # Opcional: usa nodemon para recargar autom√°ticamente cuando hay cambios
    restart: unless-stopped


  postgres:
    container_name: postgres_db
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=api_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    ports:
      - "8080:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    restart: unless-stopped

volumes:
  postgres_data: